<?php
/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

/**
 * Atomic mutation for the specified row. It can be either Put or Delete.
 */
class TMutation extends TBase
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'put',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\TPut',
        ),
        2 => array(
            'var' => 'deleteSingle',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\TDelete',
        ),
    );

    /**
     * @var \TPut
     */
    public $put = null;
    /**
     * @var \TDelete
     */
    public $deleteSingle = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            parent::__construct(self::$_TSPEC, $vals);
        }
    }

    public function getName()
    {
        return 'TMutation';
    }


    public function read($input)
    {
        return $this->_read('TMutation', self::$_TSPEC, $input);
    }


    public function write($output)
    {
        return $this->_write('TMutation', self::$_TSPEC, $output);
    }

}
