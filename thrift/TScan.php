<?php
/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

/**
 * Any timestamps in the columns are ignored, use timeRange to select by timestamp.
 * Max versions defaults to 1.
 */
class TScan extends TBase
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'startRow',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'stopRow',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        3 => array(
            'var' => 'columns',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::STRUCT,
            'elem' => array(
                'type' => TType::STRUCT,
                'class' => '\TColumn',
                ),
        ),
        4 => array(
            'var' => 'caching',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        5 => array(
            'var' => 'maxVersions',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        6 => array(
            'var' => 'timeRange',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\TTimeRange',
        ),
        7 => array(
            'var' => 'filterString',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        8 => array(
            'var' => 'batchSize',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        9 => array(
            'var' => 'attributes',
            'isRequired' => false,
            'type' => TType::MAP,
            'ktype' => TType::STRING,
            'vtype' => TType::STRING,
            'key' => array(
                'type' => TType::STRING,
            ),
            'val' => array(
                'type' => TType::STRING,
                ),
        ),
        10 => array(
            'var' => 'authorizations',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\TAuthorization',
        ),
        11 => array(
            'var' => 'reversed',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
    );

    /**
     * @var string
     */
    public $startRow = null;
    /**
     * @var string
     */
    public $stopRow = null;
    /**
     * @var \TColumn[]
     */
    public $columns = null;
    /**
     * @var int
     */
    public $caching = null;
    /**
     * @var int
     */
    public $maxVersions = 1;
    /**
     * @var \TTimeRange
     */
    public $timeRange = null;
    /**
     * @var string
     */
    public $filterString = null;
    /**
     * @var int
     */
    public $batchSize = null;
    /**
     * @var array
     */
    public $attributes = null;
    /**
     * @var \TAuthorization
     */
    public $authorizations = null;
    /**
     * @var bool
     */
    public $reversed = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            parent::__construct(self::$_TSPEC, $vals);
        }
    }

    public function getName()
    {
        return 'TScan';
    }


    public function read($input)
    {
        return $this->_read('TScan', self::$_TSPEC, $input);
    }


    public function write($output)
    {
        return $this->_write('TScan', self::$_TSPEC, $output);
    }

}
